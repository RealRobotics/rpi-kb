    1  git
    2  sudo apt update
    3  sudo apt install git gitk 
    4  git clone https://github.com/andybight/bash_scripts.git
    5  git clone https://github.com/andyblight/bash_scripts.git
    6  sudo nano /etc/apt/apt.conf.d/20auto-upgrades 
    7  ps aux
    8  cd bash_scripts/
    9  ./install.sh ubuntu22.04lts/
   10  git config --global user.name "Andy Blight"
   11  git config --global user.email a.j.blight@leeds.ac.uk
   12  cd ~/tankbot_ws/
   13  . /opt/ros/humble/setup.bash
   14  colcon build
   15  ls
   16  . /home/pipebot/tankbot_ws/install/setup.bash
   17  ros2 launch tankbot camera.launch.py 
   18  mkdir tankbot_ws
   19  cd tankbot_ws/
   20  mksir src
   21  mkdir src
   22  cd src
   23  git status
   24  git clone https://github.com/pipebots/tankbot.git
   25  cd tankbot
   26  ls
   27  cd setup/
   28  cd ros2
   29  ls
   30  git st
   31  git br
   32  git br -a
   33  git co add-camera-instructions 
   34  ls
   35  gedit install_rpi.bash &
   36  gedit install_ros2_desktop.bash &
   37  gitk &
   38  gedit install_rpi_camera.bash &
   39  git status
   40  ./install_ros2_desktop.bash 
   41  . /opt/ros/humble/setup.bash
   42  ros2
   43  gedit ~/.bash_aliases 
   44  cd tankbot_ws/src/tankbot/
   45  g++
   46  apt search meson
   47  git pull
   48  git diff
   49  git reset --hard
   50  git pull
   51  setup/ros2/install_rpi_camera.bash 
   52  mkdir ~/git
   53  setup/ros2/install_rpi_camera.bash 
   54  libcamera-hello
   55  cam
   56  cam -l
   57  cd tankbot_ws/
   58  ls
   59  sudo apt install psensor
   60  psensor
   61  bg
   62  cam -l
   63  LIBCAMERA_LOG_LEVELS=*:DEBUG cam -l
   64  ls -l /dev/dma_heap/linux,cma 
   65  sudo adduser $USER video
   66  cd tankbot_ws/
   67  gedit src/tankbot/setup/ros2/install_rpi_camera.bash 
   68  bg
   69  gedit src/tankbot/setup/ros2/README.md &
   70  cam -l
   71  groups
   72  sudo adduser $USER video
   73  cd src
   74  ls
   75  gedit tankbot/setup/ros2/install_ros2_desktop.bash &
   76  sudo curl -sSL https://archive.raspberrypi.org/debian/raspberrypi.gpg.key -o /usr/share/keyrings/raspberrypi-archive-keyring.gpg
   77  cat /usr/share/keyrings/raspberrypi-archive-keyring.gpg
   78  cat /etc/os-release
   79  echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/raspberrypi-archive-keyring.gpg] http://archive.raspberrypi.org/debian $(source /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/raspberrypi.list > /dev/null
   80  sudo apt update
   81  echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/raspberrypi-archive-keyring.gpg] http://archive.raspberrypi.org/debian bullseye main" | sudo tee /etc/apt/sources.list.d/raspberrypi.list > /dev/null
   82  cat /etc/apt/sources.list.d/raspberrypi.list
   83  sudo apt update
   84  sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 82B129927FA3303E
   85  sudo apt update
   86  gpg 
   87  wget http://archive.raspberrypi.org/debian/bullseye/InRelease
   88  wget http://archive.raspberrypi.org/debian/dists/bullseye/InRelease
   89  ls
   90  gpg --verify
   91  gpg --verify 
   92  gpg --verify /usr/share/keyrings/raspberrypi-archive-keyring.gpg InRelease 
   93  wget http://archive.raspberrypi.org/debian
   94  ls
   95  wget http://archive.raspberrypi.org/debian/raspberrypi.gpg.key
   96  gpg --verify raspberrypi.gpg.key InRelease 
   97  gst-device-monitor-1.0 Video
   98  LIBCAMERA_LOG_LEVELS=*:DEBUG cam -l
   99  gst-launch-1.0 libcamerasrc camera-name="imx219" ! glimagesink
  100  gst-device-monitor-1.0 Video
  101  gst-launch-1.0 libcamerasrc ! glimagesink
  102  gst-launch-1.0 libcamerasrc ! glimagesinkWARNING: erroneous pipeline: no element "libcamerasrc"
  103   GST_DEBUG=libcamera*:7,v4l2*:7,*:4 gst-launch-1.0 -vvvv libcamerasrc ! video/x-raw,width=1280,height=720,format=NV12 ! v4l2h264enc extra-controls="controls,repeat_sequence_header=1" ! 'video/x-h264,level=(string)4' ! h264parse ! matroskamux ! filesink location=foo.mkv
  104  gst-launch-1.0 --version
  105  sudo apt install     libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev
  106  libcamera-vid 
  107  sudo apt-get install libx264-dev libjpeg-dev
  108  sudo apt-get install libgstreamer1.0-dev      libgstreamer-plugins-base1.0-dev      libgstreamer-plugins-bad1.0-dev      gstreamer1.0-plugins-ugly      gstreamer1.0-tools      gstreamer1.0-gl      gstreamer1.0-gtk3 
  109  gst-launch-1.0 libcamerasrc ! glimagesinkWARNING: erroneous pipeline: no element "libcamerasrc"
  110  ros2 topic list
  111  rqt &
  112  tankbot/setup/ros2/install_rpi_camera.bash 
  113  qcam
  114  cd tankbot/
  115  git status
  116  git commit -am "Added build of libcamera-apps"
  117  git push
  118  git status
  119  ros2 topic list
  120  cd tankbot_ws/
  121  cam -l
  122  cam --help
  123  cam -C 1 -F ~/
  124  cam -c 1 -C 1 -F ~/
  125  cam -c=1 -C=1 -F=~/
  126  cam -c=1 
  127  cam -c 1 
  128  cam --capture=1  --file=~/photo.jpg
  129  cam --capture=1 --camera=1 --file=~/photo.jpg
  130  cam --camera 1 --capture=1 --file=~/photo.jpg
  131  cam --camera 1 --capture=1 --file=~/
  132  ls ~
  133  cheese
  134  cheese /dev/video0
  135  sudo apt install libcamera-tools
  136  sudo apt install libcamera-apps
  137  libcamera-jpeg 
  138  libcamera-hello
  139  apt search picamera
  140  apt search Picamera
  141  sudo apt install python3-prctl
  142  sudo pip3 install picamera2
  143  sudo pip3 install picamera2 libcamera
  144  sudo apt install -y python3-kms++ 
  145  sudo apt install -y python3-kms
  146  sudo apt install -y python3-pyqt5 python3-prctl libatlas-base-dev ffmpeg 
  147  sudo pip3 install numpy --upgrade
  148  sudo pip3 install kms++
  149  sudo pip3 install kms
  150  sudo pip3 install picamera2gui
  151  sudo pip3 install picamera2[gui]
  152  libcamera-hello
  153  gedit picam2_test.py
  154  bg
  155  python3 picam2_test.py 
  156  sudo nano /etc/apt/preferences.d/raspberry
  157  sudo apt-cache policy python3-picamera2
  158  sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 82B129927FA3303E
  159  sudo apt update
  160  colcon build
  161  ros2 run image_tools cam2image
  162  v4l2-ctl --list-formats-ext 
  163  sudo apt install v4l-utils
  164  v4l2-ctl --list-formats-ext 
  165  v4l2-ctl --help
  166  v4l2-ctl --all
  167  v4l2-ctl --list-devices
  168  ffmpeg -f video4linux2 -s 640x480 -i /dev/video0 -ss 0:0:2 -frames 1 /tmp/out.jpg
  169  ffmpeg -f video4linux2 -list_formats all -i /dev/video0
  170  ffmpeg -f v4l2 -s 200x150 -i /dev/video0 -c:v libx264 -b:v 300k out.mp4
  171  cd ../git
  172  git clone https://github.com/raspberrypi/libcamera-apps.git
  173  cd libcamera-apps/
  174  ls
  175  sudo apt install -y libcamera-dev libjpeg-dev libtiff5-dev
  176  sudo apt install libavcodec-dev libavdevice-dev libavformat-dev libswresample-dev
  177  sudo apt install -y libboost-dev
  178  sudo apt install -y libgnutls28-dev openssl libtiff5-dev
  179  sudo apt install -y qtbase5-dev libqt5core5a libqt5gui5 libqt5widgets5
  180  sudo apt install -y meson
  181  sudo pip3 install pyyaml ply
  182  sudo pip3 install --upgrade meson
  183  sudo apt install -y libglib2.0-dev libgstreamer-plugins-base1.0-dev
  184  cd ../libcamera
  185  meson build --buildtype=release -Dpipelines=raspberrypi -Dipas=raspberrypi -Dv4l2=true -Dgstreamer=enabled -Dtest=false -Dlc-compliance=disabled -Dcam=disabled -Dqcam=enabled -Ddocumentation=disabled
  186  meson setup --wipe
  187  meson setup --wipe .
  188  ls
  189  meson setup --wipe build
  190  rm -rf build
  191  meson build --buildtype=release -Dpipelines=raspberrypi -Dipas=raspberrypi -Dv4l2=true -Dgstreamer=enabled -Dtest=false -Dlc-compliance=disabled -Dcam=disabled -Dqcam=enabled -Ddocumentation=disabled
  192  meson build --buildtype=release -Dpipelines=raspberrypi -Dipas=raspberrypi -Dv4l2=true -Dgstreamer=enabled -Dtest=false -Dlc-compliance=disabled -Dcam=enabled -Dqcam=enabled -Ddocumentation=disabled
  193  rm -rf build
  194  meson build --buildtype=release -Dpipelines=raspberrypi -Dipas=raspberrypi -Dv4l2=true -Dgstreamer=enabled -Dtest=false -Dlc-compliance=disabled -Dcam=enabled -Dqcam=enabled -Ddocumentation=disabled
  195  ninja -C build
  196  sudo ninja -C build install
  197  sudo apt install -y cmake libboost-program-options-dev libdrm-dev libexif-dev
  198  cd ../libcamera-apps/
  199  mkdir build
  200  cd build
  201  cmake .. -DENABLE_DRM=1 -DENABLE_X11=1 -DENABLE_QT=1 -DENABLE_OPENCV=0 -DENABLE_TFLITE=0
  202  make
  203  make -j4
  204  sudo make install
  205  sudo ldconfig
  206  libcamera-hello 
  207  libcamera-hello --help
  208  libcamera-hello --list-cameras
  209  libcamera-hello 
  210  libcamera-still 
  211  ls
  212  libcamera-still --help
  213  libcamera-hello --qt-preview
  214  history
  215  ls /usr/local/bin/libcamera-hello
  216  ls /usr/local/bin/cam
  217  ls /usr/local/bin/qcam
  218  qcam
  219  v4l2-ctl --list-devices
  220  ros2 run image_tools cam2image
  221  GST_DEBUG=4 ros2 run image_tools cam2image
  222  sudo nano /boot/firmware/config.txt 
  223  cd tankbot_ws/
  224  rm -rf build/camera_ros/
  225  rm -rf install/camera_ros/
  226  rm -rf src/camera_ros/
  227  colcon build
  228  rqt &
  229  ros topic list
  230  ros2 topic list
  231  ros2 topic echo /image 
  232  rm -rf src/debian src/InRelease src/raspberrypi.gpg.key 
  233  cd ..
  234  ls
  235  gedit notes_rpi_camera2.txt &
  236  cat /etc/groups
  237  cat /etc/group
  238  cam -l
  239  cam
  240   qcam
  241  QT_QPA_PLATFORM=wayland qcam
  242   qcam
  243  GST_DEBUG=4 ros2 run image_tools cam2image
  244  GST_DEBUG=2 ros2 run image_tools cam2image
  245  gst-launch-1.0 libcamerasrc ! capsfilter caps=video/x-raw,width=1280,height=720,format=NV12 ! v4l2convert ! v4l2h264enc extra-controls="controls,repeat_sequence_header=1" ! h264parse ! rtph264pay ! udpsink host=localhost port=5000
  246  GST_DEBUG=2 
  247  gst-launch-1.0 libcamerasrc ! capsfilter caps=video/x-raw,width=1280,height=720,format=NV12 ! v4l2convert ! v4l2h264enc extra-controls="controls,repeat_sequence_header=1" ! h264parse ! rtph264pay ! udpsink host=localhost port=5000
  248  GST_DEBUG=3 gst-launch-1.0 libcamerasrc ! capsfilter caps=video/x-raw,width=1280,height=720,format=NV12 ! v4l2convert ! v4l2h264enc extra-controls="controls,repeat_sequence_header=1" ! h264parse ! rtph264pay ! udpsink host=localhost port=5000
  249  ros2 run v4l2_camera v4l2_camera_node
  250  sudo apt search v4l2_camera
  251  cd git
  252  git clone https://gitlab.com/boldhearts/ros2_v4l2_camera.git
  253  sudo apt-get install ros-${ROS_DISTRO}-v4l2-camera
  254  ~/tankbot_ws/
  255  cd ~/tankbot_ws/
  256  ros2 run v4l2_camera v4l2_camera_node
  257  GDT_DEBUG=3 ros2 run v4l2_camera v4l2_camera_node
  258  GST_DEBUG=3 ros2 run v4l2_camera v4l2_camera_node
  259  v4l2-ctl --list-devices --all
  260  GST_DEBUG=2 ros2 run image_tools cam2image
  261  GST_DEBUG=3 ros2 run image_tools cam2image
  262  GST_DEBUG=5 ros2 run image_tools cam2image
  263  ros2 run image_tools cam2image --ros-args -p reliability:=best_effort
  264  ls ~/
  265  cd ~/git
  266  ls
  267  cd libcamera
  268  ls
  269  cd utils/raspberrypi/ctt
  270  ls
  271  cat ctt_config_example.json 
  272  cd ..
  273  colcon build
  274  git status
  275  ls install/
  276  colcon build
  277  . ./install/setup.bash
  278  ros2 launch camera_ros camera_ros.launch.py 
  279  ls install/camera_ros/lib/camera_ros/camera_node 
  280  ros2 launch camera_ros camera_ros.launch.py 
  281  colcon build
  282  ros2 launch camera_ros camera_ros.launch.py 
  283  colcon build
  284  ros2 launch camera_ros camera_ros.launch.py 
  285  colcon build
  286  ros2 launch camera_ros camera_ros.launch.py 
  287  colcon build
  288  ros2 launch camera_ros camera_ros.launch.py 
  289  colcon build
  290  ros2 launch camera_ros camera_ros.launch.py 
  291  colcon build
  292  ros2 launch camera_ros camera_ros.launch.py 
  293  colcon build
  294  ros2 launch camera_ros camera_ros.launch.py 
  295  colcon build
  296  ros2 launch camera_ros camera_ros.launch.py 
  297  gedit /home/pipebot/.ros/camera_info/imx219__base_soc_i2c0mux_i2c_1_imx219_10_320x240.yaml &
  298  find . -name "libcamera*"
  299  find /usr -name "libcamera*"
  300  touch /home/pipebot/.ros/camera_info/imx219__base_soc_i2c0mux_i2c_1_imx219_10_320x240.yaml
  301  mkdir -p /home/pipebot/.ros/camera_info/
  302  touch /home/pipebot/.ros/camera_info/imx219__base_soc_i2c0mux_i2c_1_imx219_10_320x240.yaml
  303  ros2 launch camera_ros camera_ros.launch.py 
  304  colcon build
  305  ros2 launch camera_ros camera_ros.launch.py 
  306  colcon build
  307  ros2 launch camera_ros camera_ros.launch.py 
  308  colcon build
  309  ros2 launch camera_ros camera_ros.launch.py 
  310  colcon build
  311  ros2 launch camera_ros camera_ros.launch.py 
  312  colcon build
  313  ros2 launch camera_ros camera_ros.launch.py 
  314  ros2 launch camera_ros camera_ros_with_image_show.launch.py
  315  colcon build
  316  ros2 launch camera_ros camera_ros_with_image_show.launch.py
  317  mkdir -p ~/camera_test_ws/src
  318  cd camera_test_ws/src/
  319  git clone https://github.com/christianrauch/camera_ros.git
  320  ls
  321  cd camera_ros/
  322  ls
  323  mkdir launch
  324  git co -b add-launch-files
  325  cd launch/
  326  gedit camera_ros.launch.py
  327  bg
  328  cd ..
  329  gedit CMakeLists.txt &
  330  git status
  331  git add .
  332  git status
  333  git commit -am "Added example launch file.  Works"
  334  . ../../install/setup.bash
  335  ros2 topic list
  336  rqt &
  337  libcamera-heelo --list
  338  libcamera-hello --list
  339  find /opt/ros/ -name "*plug*"
  340  find ~/camera_test_ws/ -name "*plug*"
  341  find /opt/ros/ -name "*ShowImage*"
  342  find /opt/ros/ -name "*imagepl*"
  343  find /opt/ros/ -name "*image_t*"
  344  find /opt/ros/ -name "*image_tool*"
  345  git commit -am "Fewer errors when launching"
  346  black launch
  347  sudo apt instal black
  348  sudo apt install black
  349  black launch
  350  git diff
  351  git commit -am "Added comments and reformatted"
  352  git st
  353  git commit --amend
  354  sudo apt install vim
  355  git commit --amend
  356  rqt &
  357  nano .git/config
  358  git status
  359  git fetch
  360  git br -a
  361  git push 
  362      git push --set-upstream origin add-launch-files
  363  cp launch/camera_ros.launch.py launch/camera_ros_with_image_show.launch.py 
  364  git status
  365  git add .
  366  git commit -am "Added camera and image launch script"
  367  git push
  368  ip ad
  369  cd src
  370  cd tankbot/setup/workspace/
  371  ls
  372  ./setup_ws.bash 
  373  cd ../
  374  cd ..
  375  find -name "*.py"
  376  git br -a
  377  git co add-camera-instructions 
  378  find -name "*.py"
  379  pigpiod 
  380  cd setup/ros2/
  381  ls
  382  ./install_rpi_servo.bash 
  383  ls
  384  pigpiod 
  385  sudo pigpiod 
  386  cd ../..
  387  cd ../tank-ultra/tank_ultra_pkg/tank_ultra_pkg/
  388  ls
  389  python3 scan_ultra_server.py 
  390  cd ../../../tankbot/setup/
  391  ls
  392  cd ros2/
  393  ls 
  394  mv pigpio-master/ ~/git
  395  ip ad
  396  sudo raspi-config
  397  sudo apt install python3-smbus
  398  gedit install_rpi_servo.bash 
  399  cd tankbot_ws/
  400  ls src
  401  colcon build
  402  rm -rf build/pigpio/
  403  rm -rf install/pigpio/
  404  colcon build
  405  . ./install/setup.bash 
  406  ros2 launch tank_ultra_pkg scan_ultra.launch.py 
  407  groups
  408  cat /etc/group
  409  cat /etc/group | grep i2c
  410  sudo adduser $USER i2c
  411  ros2 launch tank_ultra_pkg scan_ultra.launch.py 
  412  sudo ./servo_demo 12
  413  cd git
  414  ls
  415  cd pigpio-master/
  416  ls
  417  cd ..
  418  mkdir pigpio-servo-demo
  419  cd pigpio-servo-demo/
  420  wget https://abyz.me.uk/rpi/pigpio/code/servo_demo.zip
  421  unzip servo_demo.zip 
  422  ls
  423  gcc -Wall -o servo_demo servo_demo.c -lpigpio
  424  ls
  425  sudo ./servo_demo 12
  426   ./servo_demo 12
  427  pgrep pig
  428  sudo kill 14228
  429   ./servo_demo 12
  430  sudo ./servo_demo 12
  431  cd ~/tankbot_ws/src/tank-ultra/
  432  black
  433  black tank_ultra_pkg/tank_ultra_pkg/servo_test.py 
  434  git status
  435  python3 tank_ultra_pkg/tank_ultra_pkg/servo_test.py
  436  sudo pigpiod
  437  python3 tank_ultra_pkg/tank_ultra_pkg/servo_test.py
  438  pigs s 12 1500
  439  pigs s 12 100
  440  pigs s 12 1000
  441  pigs s 12 2000
  442  python3 tank_ultra_pkg/tank_ultra_pkg/servo_test.py
  443  cd tank_ultra_pkg/tank_ultra_pkg/
  444  python3 servo_test.py
  445  pgrep -a pig
  446  pigs s 12
  447  pigs s 12 1000
  448  sudo pip3 install pigpio
  449  python3 pigpio_servo_test.py 
  450  black pigpio_servo_test.py 
  451  black test*
  452  python3 test_gpiozero_servo_jitter.py 
  453  black test_gpiozero_servo_jitter.py 
  454  python3 test_gpiozero_servo_jitter.py 
  455  black test_*
  456  python3 test_gpiozero_pigpio_servo.py 
  457  black test_*
  458  python3 test_gpiozero_pigpio_servo.py 
  459  ls
  460  cd ../servo_tests/
  461  ls
  462  python3 gpiozero_pigpio_angular_servo.py 
  463  cd ..
  464  git status
  465  git add .
  466  git status
  467  git commit -am "Added 4 servo test programs"
  468  git push
  469      git push --set-upstream origin add-servo-test
  470  git co main
  471  git pull
  472  git br -a
  473  git co add-servo-test
  474  git br -M add-servo-test-3
  475      git push --set-upstream origin add-servo-test-3
  476  git st
  477  git diff
  478  git commit -am "Servo now works for scans"
  479  black tank_ultra_pkg/scan_ultra_server.py 
  480  git commit -am "Formatted scan_ultra_server.py"
  481  git push
  482  git status
  483  upgrade.sh
  484  exit
  485  cd tankbot_ws/
  486  colcon build
  487  colcon build --packages-select tank_ultra_pkg
  488  ros2 launch tank_ultra_pkg scan_ultra.launch.py 
  489  colcon build --packages-select tank_ultra_pkg
  490  ros2 launch tank_ultra_pkg scan_ultra.launch.py 
  491  exit
  492  sudo shutdown now
  493  cd src/tank-ultra/
  494  git co -b add-servo-test
  495  groups
  496  ros2 launch tank_ultra_pkg scan_ultra.launch.py 
  497  cd tankbot_ws/
  498  gedit src/tankbot/setup/ros2/install_rpi_servo.bash &
  499  sudo pip3 install gpiozero
  500  ros2 launch tank_ultra_pkg scan_ultra.launch.py 
  501  sudo pigpiod
  502  ros2 launch tank_ultra_pkg scan_ultra.launch.py 
  503  sudo apt install raspi-config
  504  sudo raspi-config
  505  ls ~/.ssh/
  506  sudo apt install openssh-client openssh-server -y
  507  ros2 --help
  508  ls
  509  libcamera-hello 
  510  ls
  511  cat notes_rpi_camera2.txt 
  512  qcam &
  513  cd camera_test_ws/
  514  . ./install/setup.bash 
  515  . /opt/ros/humble/setup.bash 
  516  ros2 launch camera_ros camera_ros_with_image_show.launch.py 
  517  ls
  518  ls src
  519  cd src/camera_ros/
  520  git status
  521  cd ..
  522  cd camera_ros/
  523  git pull
  524  cd ../..
  525  git status
  526  ls
  527  cd ..
  528  ls
  529  cp notes_rpi_camera2.txt /media/pipebot/ANDYBLIGHT/
  530  ros2 launch camera_ros camera_ros.launch.py 
  531  history
  532  history > history.txt
